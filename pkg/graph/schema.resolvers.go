package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"

	"github.com/GodlyDad/Backend/pkg/graph/model"
)

// Translations is the resolver for the translations field.
func (r *queryResolver) Translations(ctx context.Context) ([]*model.Translation, error) {
	panic(fmt.Errorf("not implemented: Translations - translations"))
}

// Books is the resolver for the books field.
func (r *queryResolver) Books(ctx context.Context) ([]*model.Book, error) {
	panic(fmt.Errorf("not implemented: Books - books"))
}

// Chapters is the resolver for the chapters field.
func (r *queryResolver) Chapters(ctx context.Context) ([]*model.Chapter, error) {
	panic(fmt.Errorf("not implemented: Chapters - chapters"))
}

// VersesInChapter is the resolver for the versesInChapter field.
func (r *queryResolver) VersesInChapter(ctx context.Context, input string) ([]*model.Chapter, error) {
	panic(fmt.Errorf("not implemented: VersesInChapter - versesInChapter"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
